version: "3.9"
services:
    rabbitmq:
        image: "rabbitmq:3-management-alpine"
        ports:
            - 5672:5672
            - 15672:15672
        healthcheck:
            # Info: https://www.rabbitmq.com/monitoring.html#health-checks
            # test: ["CMD", "rabbitmqctl", "status"]
            test: ["CMD", "rabbitmq-diagnostics", "-q", "status"]
            interval: 10s
            timeout: 10s
            retries: 5

    postgres:
        image: "postgres:13-alpine"
        environment:
            - POSTGRES_PASSWORD
        ports:
            - 5432:5432
        volumes:
            - ./database/structure.sql:/docker-entrypoint-initdb.d/structure.sql
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 10s
            timeout: 10s
            retries: 5

    psql:
        image: "postgres:13-alpine"
        stdin_open: true
        tty: true
        command: ["psql", "-h", "postgres", "-U", "postgres"]
        depends_on:
            postgres:
                condition: service_healthy

    server:
        # container_name: server
        build:
            context: .
            dockerfile: Dockerfile.server
        ports:
            - 8080:8080
        env_file:
            - .env
        # restart: on-failure
        depends_on:
            rabbitmq:
                condition: service_healthy

    backend:
        build:
            context: .
            dockerfile: Dockerfile.backend
        env_file:
            - .env
        stdin_open: true
        tty: true
        depends_on:
            rabbitmq:
                condition: service_healthy

    database:
        build:
            context: .
            dockerfile: Dockerfile.database
        env_file:
            - .env
        depends_on:
            rabbitmq:
                condition: service_healthy
            postgres:
                condition: service_healthy
